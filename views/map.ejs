<%- include header %>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
<script type="text/javascript" src="http://yourjavascript.com/9435251235/togeojson.js"></script>
<script type="text/javascript" src="http://yourjavascript.com/5525392134/maps-google-polygon-containslatlng.js"></script>

<script>
    console.log('inside script tag');
    var map;
    var markers = [];
    var windows = [];
    var boundaryJSON;
    var region = [], opened_info;
    function initialize() {
        console.log('in initialize.');

        var mapOptions = {
            zoom: 12,
            center: new google.maps.LatLng(49.246292, -123.116226)
        };
        map = new google.maps.Map(document.getElementById('map-canvas'),
                mapOptions);


        <%for(var i in crimes) {%>
            var contentString<%=i%> = 'Address: <%=crimes[i].address%> ';
            var window<%=i%> = new google.maps.InfoWindow({
                content:contentString<%=i%>
            });
            windows = window<%=i%>;
            var latLng = new google.maps.LatLng(<%=crimes[i].lat%>, <%=crimes[i].long%>);
            var marker<%=i%> = new google.maps.Marker({
                position: latLng,
                title: "<%=crimes[i].address%>"
            });


            markers.push(marker<%=i%>);

            google.maps.event.addListener(marker<%=i%>, 'click', function() {
                window<%=i%>.open(map,marker<%=i%>);
                setTimeout(function () {
                    window<%=i%>.close();
                }, 2000);
            });

        google.maps.event.addListener(map, "click", function (event) {
            window<%=i%>.close();
        });

        <%}%>


        $.ajax('./map/boundary').done(function (xml) {

            boundaryJSON = toGeoJSON.kml(xml);

            console.log(boundaryJSON);

            for (j = 0; j < boundaryJSON.features.length; j++) {
                var polygonPaths = [];
                for (index = 0; index < boundaryJSON.features[j].geometry.coordinates[0].length; index++) {

                    var latlng = boundaryJSON.features[j].geometry.coordinates[0][index];

                    var lat = latlng[1];

                    var lng = latlng[0];

                    polygonPaths[index] = new google.maps.LatLng(lat, lng);
                }

                var currentRegionName = boundaryJSON.features[j].properties.name;
                region[j] = new google.maps.Polygon({
                    paths: polygonPaths,
                    strokeColor: '#FF0000',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#FF0000',
                    fillOpacity: 0.05,
                    title: currentRegionName
                });


                region[j].infowindow = new google.maps.InfoWindow({
                    content: 'Region: ' + currentRegionName
                });
                region[j].setMap(map);


                opened_info = new google.maps.InfoWindow();

                google.maps.event.addListener(region[j], 'mouseover', function(event) {

                    for( i =0; i< region.length;i++) {
                        var isWithin = region[i].containsLatLng(event.latLng.k, event.latLng.D);
                        if( isWithin)
                        {
                            document.getElementById('info-box').textContent =
                                    'Region:'+boundaryJSON.features[i].properties.name;
                            break;
                        }
                    }


                });

                google.maps.event.addListener(map, 'click', function (event) {
                    opened_info.close();
                });
                google.maps.event.addListener(map, 'mouseover', function (event) {
                    document.getElementById('info-box').textContent =
                            'Region:'+ 'Not in a region of Vancouver';
                });

            }


        });
    }

    // Sets the map on all markers in the array.
    function setMarkersOnMap(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    // Removes the markers from the map, but keeps them in the array.
    function clearAllMarkers() {
        setMarkersOnMap(null);
    }

    // Shows any markers currently in the array.
    function showAllMarkers() {
        setMarkersOnMap(map);
    }



    //initialize();
    console.log("in map.js");
    google.maps.event.addDomListener(window, 'load', initialize);




</script>

<div id="info-box">Current Region</div>

<div id="panel" >
    <input onclick="clearAllMarkers();" type=button value="Hide Markers">
    <input onclick="showAllMarkers();" type=button value="Show All Markers">
</div>

<div>
    <select id="regionSelect" onchange="getRegions()">
        <option>Select Region</option>
        <%
        console.log('in view: regions:', regions);
                for(var i in regions){%>
        <option value="<%=regions[i].name%>"><%=regions[i].name%></option>
        <%}%>

    </select>
</div>
<br>
<div id="map-canvas"></div>
<%- include footer %>


