<%- include header %>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
<script type="text/javascript" src="http://yourjavascript.com/9435251235/togeojson.js"></script>
<script type="text/javascript" src="http://yourjavascript.com/5525392134/maps-google-polygon-containslatlng.js"></script>
<script>


    var map;
    var markers = [];
    var windows = [];
    var boundaryJSON;
    var region = [], opened_info;
    function initialize() {

        var mapOptions = {
            zoom: 12,
            center: new google.maps.LatLng(49.246292, -123.116226)
        };

        geocoder = new google.maps.Geocoder();
        map = new google.maps.Map(document.getElementById('map-canvas'),
                mapOptions);


        <%for(var i in crimes) {%>
            var contentString<%=i%> = 'Address: <%=crimes[i].address%> ';
            var typeString<%=i%> = 'Type: <%=crimes[i].type%>';
            var monthString<%=i%> = 'Month: <%=crimes[i].month%>';
            var window<%=i%> = new google.maps.InfoWindow({
                content:"<p>"+contentString<%=i%>+"<br />"+typeString<%=i%>+"<br />"+monthString<%=i%>+
                    "<br />"+'<a href="/comment">'+"Submit a comment"+'</a>'+"</p>"
            });
            windows = window<%=i%>;
            var latLng = new google.maps.LatLng(<%=crimes[i].lat%>, <%=crimes[i].long%>);
            var marker<%=i%> = new google.maps.Marker({
                position: latLng,
                title: "<%=crimes[i].address%>"
            });


            markers.push(marker<%=i%>);

            google.maps.event.addListener(marker<%=i%>, 'click', function() {
                window<%=i%>.open(map,marker<%=i%>);


                setTimeout(function () {
                    window<%=i%>.close();
                }, 3500);
            });

        google.maps.event.addListener(marker<%=i%>, 'mouseover', function() {
            var markerLat = marker<%=i%>.position.k;
            var markerLng =marker<%=i%>.position.D;

            for( i =0; i< region.length;i++) {
                var isWithin = region[i].containsLatLng(markerLat, markerLng);
                if(isWithin)
                {
                    document.getElementById('info-box').textContent =
                            'Neighbourhood: '+boundaryJSON.features[i].properties.name;
                }
            }

        });

        google.maps.event.addListener(map, "click", function (event) {
            window<%=i%>.close();
        });

        <%}%>


        $.ajax('./map/boundary').done(function (xml) {

            boundaryJSON = toGeoJSON.kml(xml);

            //console.log(boundaryJSON);

            for (j = 0; j < boundaryJSON.features.length; j++) {
                var polygonPaths = [];
                for (index = 0; index < boundaryJSON.features[j].geometry.coordinates[0].length; index++) {

                    var latlng = boundaryJSON.features[j].geometry.coordinates[0][index];

                    var lat = latlng[1];

                    var lng = latlng[0];

                    polygonPaths[index] = new google.maps.LatLng(lat, lng);
                }

                var currentRegionName = boundaryJSON.features[j].properties.name;
                region[j] = new google.maps.Polygon({
                    paths: polygonPaths,
                    strokeColor: '#FF0000',
                    strokeOpacity: 0.8,
                    strokeWeight: 1,
                    fillColor: '#FF0000',
                    fillOpacity: 0.05,
                    title: currentRegionName
                });

                region[j].setMap(map);


                google.maps.event.addListener(region[j], 'mouseover', function(event) {

                    for( i =0; i< region.length;i++) {
                        var isWithin = region[i].containsLatLng(event.latLng.k, event.latLng.D);
                        if( isWithin)
                        {
                            document.getElementById('info-box').textContent =
                                    'Neighbourhood: '+boundaryJSON.features[i].properties.name;
                            break;
                        }
                    }


                });
                google.maps.event.addListener(region[j], 'mouseout', function (event) {
                    document.getElementById('info-box').textContent =
                            'Not in a region of Vancouver';
                });

            }


        });
    }

    function getARegionByName(name){
        for( i =0; i< region.length;i++) {
            if(name==boundaryJSON.features[i].properties.name)
            {
                return region[i];
            }
        }
    }

    // Sets the map on all markers in the array.
    function setMarkersOnMap(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
       // console.log(markers[0]);
    }

    function setRegionMarkersOnMap(map,regionName){
        for(var i = 0; i < markers.length; i++){
            var markerLat = markers[i].position.k;
            var markerLng =markers[i].position.D;

            var region = getARegionByName(regionName);

            var isWithin = region.containsLatLng(markerLat,  markerLng);
            if( isWithin)
            {
                markers[i].setMap(map);
            }
        }
    }

    // Removes the markers from the map, but keeps them in the array.
    function clearAllMarkers() {
        setMarkersOnMap(null);
    }

    // Shows any markers currently in the array.
    function showAllMarkers() {
        setMarkersOnMap(map);
        map.setZoom(12);
        map.setCenter(new google.maps.LatLng(49.246292, -123.116226));
    }

    function changeCentre(map,regionName) {
        var region = getARegionByName(regionName);
        map.setZoom(14);
        map.setCenter(region.getBounds().getCenter());

    }



    //initialize();
    google.maps.event.addDomListener(window, 'load', initialize);

    function getRegions(){
        var regionList = document.getElementById("regionSelect");
        var selectedRegionName = regionList.options[regionList.selectedIndex].value;
        if(selectedRegionName!="Select Neighbourhood" && selectedRegionName!="SHOW ALL") {
            clearAllMarkers();
            setRegionMarkersOnMap(map, selectedRegionName);
            changeCentre(map, selectedRegionName);
        }
        else if(selectedRegionName=="SHOW ALL"){
            clearAllMarkers();
            showAllMarkers();
        }
    }


    // Hide all comments initially
    jQuery('document').ready(function() {
        jQuery('.comment').hide();
    });

    //Display the comments for the selected region on region selection click
    function getRegionComments(){
        var regionList = document.getElementById("regionSelect");
        var selectedRegionName = regionList.options[regionList.selectedIndex].value;
        if(selectedRegionName!="Select Neighbourhood" && selectedRegionName!="SHOW ALL") {
            jQuery('.comment').hide();

            // hack to deal with regions that have 2 words
            var rname = selectedRegionName.substr(0, selectedRegionName.indexOf(' '));
            if (rname.length==0) {rname=selectedRegionName;}
            var cname = '.comment.' + rname;
            jQuery(cname).show();

            setRegionMarkersOnMap(map, selectedRegionName);
            changeCentre(map, selectedRegionName);
        }
    }



    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition, showError);
        } else {
            document.getElementById('info-box').textContent = "Geolocation is not supported by this browser.";
        }
    }
    var cityCircle;
    function showPosition(position) {
        var radius = prompt("Please enter a radius:(in km)", "1");

        if(!radius){
            document.getElementById('info-box').textContent = "CANCELLED!";
        }
        else if (radius < 0 || radius > 10) {
            document.getElementById('info-box').textContent = "INVALID RADIUS!";
        }
        else {
            var curLatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            displayByRadius(curLatLng, radius);
        }
    }

    function displayByRadius(latlng,radius){
        if(cityCircle!=null)
            cityCircle.setMap(null);
        var nearCrimeOptions = {
            strokeColor: 'blue',
            strokeOpacity: 0.02,
            strokeWeight: 1,
            fillColor: 'blue',
            fillOpacity: 0.05,
            map: map,
            center: latlng,
            radius: radius * 1000
        };

        cityCircle = new google.maps.Circle(nearCrimeOptions);
        setTimeout(function () {
            this.cityCircle.setMap(null);
        }, 5000);
        clearAllMarkers();
        var pointIsInsideCircle;
        var countPointIsInsideCircle=0;
        for (var i = 0; i < markers.length; i++) {
            var markerLat = markers[i].position.k;
            var markerLng = markers[i].position.D;
            var markerLatLng = new google.maps.LatLng(markerLat, markerLng);
            pointIsInsideCircle= google.maps.geometry.spherical.computeDistanceBetween(cityCircle.getCenter(), markerLatLng) <= cityCircle.getRadius();
            if (pointIsInsideCircle) {
                countPointIsInsideCircle++;
                markers[i].setMap(map);
            }
        }
        if(countPointIsInsideCircle==0)
        {
            document.getElementById('info-box').textContent = "No crime data in given radius!";

        }
        map.setCenter(cityCircle.getCenter());
        map.setZoom(13);
    }

    function showError(error) {
        switch(error.code) {
            case error.PERMISSION_DENIED:
                document.getElementById('info-box').textContent = "User denied the request for Geolocation."
                break;
            case error.POSITION_UNAVAILABLE:
                document.getElementById('info-box').textContent = "Location information is unavailable."
                break;
            case error.TIMEOUT:
                document.getElementById('info-box').textContent = "The request to get user location timed out."
                break;
            case error.UNKNOWN_ERROR:
                document.getElementById('info-box').textContent  = "An unknown error occurred."
                break;
        }
    }

    function searchCrime(){


        var address = prompt("What's your address in Vancouver, BC?");
        if(address) {
            var radius = prompt("Please enter a radius:(in km)", "1");
            if(!radius){
                document.getElementById('info-box').textContent = "CANCELLED!";
            }
            else if (radius < 0 || radius > 10) {
                document.getElementById('info-box').textContent = "INVALID RADIUS!";
            }
            else {
                geocoder.geocode({'address': address + ', Vancouver, BC'}, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        displayByRadius(results[0].geometry.location, radius);
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }
        }
        else{
            document.getElementById('info-box').textContent = "Cancelled.";
        }
    }



</script>



<div id="panel" align="center">
    <input onclick="scroll(0,600)" type=button class="btnExample2" width="20%" value="View Comments">
    <input onclick="searchCrime();" type=button class="btnExample2" width="50%" value="Search Address">
    <input onclick="getLocation();" type=button class="btnExample2" width="20%" value="Crimes Nearby">

</div>

<div align="center">
    <select id="regionSelect" onchange="getRegions();getRegionComments();">
        <option >Select Neighbourhood</option>
        <option >SHOW ALL</option>

        <%for(var i in regions){%>

        <option value="<%=regions[i].name%>"><%=regions[i].name%></option>
        <%}%>

    </select>
</div>
<div id="info-box">Current Neighbourhood</div>
<div id="map-canvas"></div>
<br>
<div id="comments">
    <h3>Comments:</h3>
    <div id="submit-new-comment" align="right"><a href="/comment">Submit a new comment</a></div>

    <%for(var i in comments){%>
         <div class="comment <%=comments[i].region%>" id = "comment-<%=comments[i].region%>">

             <div class="comment-title">
                 <h3><u><%=comments[i].title%></u></h3>
             </div>
            <div class="comment-user">
                <i>User: <%=comments[i].creator.name%></i>
            </div>
             <div class="comment-body">
                 <%=comments[i].body%>
             </div><br>
         </div>
    <%}%>

</div>

<a href="javascript:scroll(0,0)">Back to top</a>
<%- include footer %>


